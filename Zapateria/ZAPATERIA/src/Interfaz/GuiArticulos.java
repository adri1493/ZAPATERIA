
package Interfaz;

import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;

import java.util.Calendar;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import java.util.Observable;
import java.util.Observer;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import project1.Articulo;
import project1.Categoria;
import project1.Empresa;
import project1.Marca;

/**
 *
 * @author polaco
 */
public class GuiArticulos extends javax.swing.JFrame implements Observer {
    Empresa unaEmpresa;
    Collection articulos = new LinkedList();
    public String[][] data2;
    int kill = 0;
    Double Total = 0.0;

    /** Creates new form Articulos */
    public GuiArticulos(Empresa unaEmpresa) {
        this.unaEmpresa = unaEmpresa;
        initComponents();
        actualizarComboMarca();
        actualizarComboCategoria1();
        actualizarCategoria2();
        CargaTabla(unaEmpresa.getArticulos());
        actualizarLista();
        unaEmpresa.addObserver(this);
        reloj();
        lblUsuarioActual1.setText(GuiIngresar.getUsuario());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        jPopupMenu1 = new javax.swing.JPopupMenu();
        menuEliminar = new javax.swing.JMenuItem();
        menuModificar = new javax.swing.JMenuItem();
        jPanel2 = new javax.swing.JPanel();
        lblCodigoBarra = new javax.swing.JLabel();
        lblMarca = new javax.swing.JLabel();
        cmbMarca = new javax.swing.JComboBox();
        lblColor = new javax.swing.JLabel();
        btnAgregarMarca = new javax.swing.JButton();
        lblNombre = new javax.swing.JLabel();
        lblStock = new javax.swing.JLabel();
        lblColor2 = new javax.swing.JLabel();
        lblTalle = new javax.swing.JLabel();
        lblPrecioVenta1 = new javax.swing.JLabel();
        lblCategoria1 = new javax.swing.JLabel();
        lblCategoria2 = new javax.swing.JLabel();
        cmbCategoria1 = new javax.swing.JComboBox();
        btnAgregarCategoria = new javax.swing.JButton();
        cmbCategoria2 = new javax.swing.JComboBox();
        lblCriterioBusqueda = new javax.swing.JLabel();
        lblBusqueda = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblArticulos1 = new javax.swing.JTable();
        txtNombre = new javax.swing.JTextField();
        txtTalle = new javax.swing.JTextField();
        txtStock = new javax.swing.JTextField();
        txtCodBarra = new javax.swing.JTextField();
        txtPrecioVenta = new javax.swing.JTextField();
        txtColor2 = new javax.swing.JTextField();
        txtColor1 = new javax.swing.JTextField();
        txtBusqueda = new javax.swing.JTextField();
        cmbSexo = new javax.swing.JComboBox();
        lblCategoria3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstNombre = new javax.swing.JList();
        jPanel1 = new javax.swing.JPanel();
        btnGuardarNueArt = new javax.swing.JButton();
        btnCancelarArt = new javax.swing.JButton();
        btnGuardarConArt = new javax.swing.JButton();
        btnGuardarCerArt = new javax.swing.JButton();
        cmbCriterioArticulo = new javax.swing.JComboBox();
        jPanel6 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        lblUsuarioActual1 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        lblFecha1 = new javax.swing.JLabel();

        menuEliminar.setText("Eliminar");
        menuEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEliminarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(menuEliminar);
        menuEliminar.getAccessibleContext().setAccessibleDescription("");
        menuEliminar.getAccessibleContext().setAccessibleParent(jPopupMenu1);

        menuModificar.setText("Modificar");
        menuModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuModificarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuModificarMouseEntered(evt);
            }
        });
        menuModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuModificarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(menuModificar);
        menuModificar.getAccessibleContext().setAccessibleParent(jPopupMenu1);

        jPopupMenu1.getAccessibleContext().setAccessibleParent(tblArticulos1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Articulos");
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/iconos/iconoprograma.png")));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        lblCodigoBarra.setText("Codigo de Barra *");

        lblMarca.setText("Marca *");

        cmbMarca.setNextFocusableComponent(txtColor1);
        cmbMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMarcaActionPerformed(evt);
            }
        });

        lblColor.setText("Color 1");

        btnAgregarMarca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/1409705665_add.png"))); // NOI18N
        btnAgregarMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarMarcaActionPerformed(evt);
            }
        });

        lblNombre.setText("Nombre *");

        lblStock.setText("Stock *");

        lblColor2.setText("Color 2");

        lblTalle.setText("Talle");

        lblPrecioVenta1.setText("Precio Venta *");

        lblCategoria1.setText("Categoria 1");

        lblCategoria2.setText("Categoria 2");

        cmbCategoria1.setNextFocusableComponent(cmbCategoria2);
        cmbCategoria1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCategoria1ActionPerformed(evt);
            }
        });

        btnAgregarCategoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/1409705665_add.png"))); // NOI18N
        btnAgregarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarCategoriaActionPerformed(evt);
            }
        });

        cmbCategoria2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCategoria2ActionPerformed(evt);
            }
        });

        lblCriterioBusqueda.setText("Criterio de Busqueda:");

        lblBusqueda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/1412329438_685082-Search-16.png"))); // NOI18N
        lblBusqueda.setText("Busqueda:");

        tblArticulos1.setAutoCreateRowSorter(true);
        tblArticulos1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Codigo de Barra", "Nombre", "Marca", "Stock", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblArticulos1.setComponentPopupMenu(jPopupMenu1);
        tblArticulos1.getTableHeader().setReorderingAllowed(false);
        tblArticulos1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblArticulos1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblArticulos1);
        tblArticulos1.getColumnModel().getColumn(0).setHeaderValue("Codigo de Barra");
        tblArticulos1.getColumnModel().getColumn(1).setHeaderValue("Nombre");
        tblArticulos1.getColumnModel().getColumn(2).setHeaderValue("Marca");
        tblArticulos1.getColumnModel().getColumn(3).setHeaderValue("Stock");
        tblArticulos1.getColumnModel().getColumn(4).setHeaderValue("Precio");

        txtNombre.setNextFocusableComponent(txtTalle);
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });

        txtTalle.setNextFocusableComponent(txtStock);
        txtTalle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTalleKeyTyped(evt);
            }
        });

        txtStock.setNextFocusableComponent(cmbMarca);
        txtStock.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtStockKeyTyped(evt);
            }
        });

        txtCodBarra.setNextFocusableComponent(txtStock);
        txtCodBarra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodBarraKeyTyped(evt);
            }
        });

        txtPrecioVenta.setNextFocusableComponent(cmbCategoria1);
        txtPrecioVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioVentaKeyTyped(evt);
            }
        });

        txtColor2.setNextFocusableComponent(txtPrecioVenta);
        txtColor2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtColor2KeyTyped(evt);
            }
        });

        txtColor1.setNextFocusableComponent(txtColor2);
        txtColor1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtColor1KeyTyped(evt);
            }
        });

        txtBusqueda.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtBusquedaCaretUpdate(evt);
            }
        });

        cmbSexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Caballero", "Dama" }));

        lblCategoria3.setText("sexo");

        lstNombre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstNombreMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(lstNombre);

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        btnGuardarNueArt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/1404956317_script_save.png"))); // NOI18N
        btnGuardarNueArt.setText("Guardar y Nuevo");
        btnGuardarNueArt.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnGuardarNueArt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarNueArtActionPerformed(evt);
            }
        });

        btnCancelarArt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/1404956598_Delete.png"))); // NOI18N
        btnCancelarArt.setText("Cancelar");
        btnCancelarArt.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        btnGuardarConArt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/1404956318_document-save-as.png"))); // NOI18N
        btnGuardarConArt.setText("Guardar y Continuar");
        btnGuardarConArt.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnGuardarConArt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarConArtActionPerformed(evt);
            }
        });

        btnGuardarCerArt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/1404955973_Save.png"))); // NOI18N
        btnGuardarCerArt.setText("Guardar y Cerrar");
        btnGuardarCerArt.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnGuardarCerArt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarCerArtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(btnGuardarConArt)
                .addGap(68, 68, 68)
                .addComponent(btnGuardarNueArt)
                .addGap(57, 57, 57)
                .addComponent(btnGuardarCerArt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 455, Short.MAX_VALUE)
                .addComponent(btnCancelarArt)
                .addGap(14, 14, 14))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardarNueArt, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                    .addComponent(btnCancelarArt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGuardarCerArt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGuardarConArt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        cmbCriterioArticulo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Busqueda Inteligente", "Codigo de Barra", "Nombre", "Marca", "Color", "Categoria" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblColor2)
                    .addComponent(lblColor)
                    .addComponent(lblNombre)
                    .addComponent(lblTalle)
                    .addComponent(lblStock)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCodigoBarra)
                                    .addComponent(lblPrecioVenta1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtStock)
                                    .addComponent(cmbMarca, 0, 285, Short.MAX_VALUE)
                                    .addComponent(txtCodBarra)
                                    .addComponent(txtNombre)
                                    .addComponent(txtTalle)
                                    .addComponent(txtColor1)
                                    .addComponent(txtColor2)
                                    .addComponent(txtPrecioVenta)))
                            .addComponent(lblMarca)
                            .addComponent(lblCategoria1)
                            .addComponent(lblCategoria2)
                            .addComponent(lblCategoria3)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbCategoria1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbCategoria2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbSexo, 0, 285, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnAgregarMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAgregarCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblCriterioBusqueda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbCriterioArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(98, 98, 98)
                        .addComponent(lblBusqueda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 667, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblCriterioBusqueda)
                        .addComponent(lblBusqueda)
                        .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbCriterioArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCodBarra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblCodigoBarra)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblMarca)
                                        .addComponent(cmbMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnAgregarMarca))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblNombre)
                                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(26, 26, 26)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblTalle)
                                            .addComponent(txtTalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(26, 26, 26)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblStock))
                                        .addGap(26, 26, 26)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtColor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblColor))
                                        .addGap(26, 26, 26)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtColor2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblColor2))
                                        .addGap(26, 26, 26)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtPrecioVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblPrecioVenta1))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(cmbCategoria1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblCategoria1))
                                        .addGap(26, 26, 26)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(cmbCategoria2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblCategoria2))
                                        .addGap(19, 19, 19)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(cmbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblCategoria3)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnAgregarCategoria)
                                        .addGap(59, 59, 59))))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel13.setText("Usuario: ");

        lblUsuarioActual1.setText("label");

        jLabel14.setText("fecha:");

        lblFecha1.setText("Usuario: ");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblUsuarioActual1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 997, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblFecha1)
                .addGap(137, 137, 137))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel14)
                .addComponent(lblFecha1)
                .addComponent(jLabel13)
                .addComponent(lblUsuarioActual1))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 53, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(36, 36, 36))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(618, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        pack();
    }//GEN-END:initComponents

    private void btnAgregarMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarMarcaActionPerformed
        GuigestionMarcas vMarca = new GuigestionMarcas(unaEmpresa);
        vMarca.setVisible(true);
    }//GEN-LAST:event_btnAgregarMarcaActionPerformed

    private void txtBusquedaCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtBusquedaCaretUpdate
        CargaTabla(consultaArticulos(txtBusqueda.getText().toUpperCase()));
    }//GEN-LAST:event_txtBusquedaCaretUpdate

    private void btnAgregarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarCategoriaActionPerformed
        GuiCategoria vCat = new GuiCategoria(unaEmpresa);
        vCat.setVisible(true);
    }//GEN-LAST:event_btnAgregarCategoriaActionPerformed

    private void btnGuardarConArtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarConArtActionPerformed
        int i = cmbCategoria1.getSelectedIndex();
        int j = cmbCategoria2.getSelectedIndex();
        int k = cmbMarca.getSelectedIndex();
        int l = cmbSexo.getSelectedIndex();
        Guardar();
        cmbCategoria1.setSelectedIndex(i);
        cmbCategoria2.setSelectedIndex(j);
        cmbMarca.setSelectedIndex(k);
        cmbSexo.setSelectedIndex(l);
    }//GEN-LAST:event_btnGuardarConArtActionPerformed

    private void btnGuardarNueArtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarNueArtActionPerformed
        Guardar();
        limpiar();
    }//GEN-LAST:event_btnGuardarNueArtActionPerformed

    private void btnGuardarCerArtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarCerArtActionPerformed
        Guardar();
        this.dispose();
    }//GEN-LAST:event_btnGuardarCerArtActionPerformed

    private void txtTalleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTalleKeyTyped
        char c = evt.getKeyChar();
        if (((c < '0') || (c > '9')) && (c != KeyEvent.VK_BACK_SPACE)) {
            evt.consume();
        }
        if (txtTalle.getText().length() >= 2) {
            evt.consume();
        }
    }//GEN-LAST:event_txtTalleKeyTyped

    private void txtCodBarraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodBarraKeyTyped
        char c = evt.getKeyChar();
        if (((c < '0') || (c > '9')) && (c != KeyEvent.VK_BACK_SPACE)) {
            evt.consume();
        }
        if (txtCodBarra.getText().length() >= 13) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCodBarraKeyTyped

    private void txtStockKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStockKeyTyped
        char c = evt.getKeyChar();
        if (((c < '0') || (c > '9')) && (c != KeyEvent.VK_BACK_SPACE)) {
            evt.consume();
        }
        if (txtStock.getText().length() >= 6) {
            evt.consume();
        }
    }//GEN-LAST:event_txtStockKeyTyped

    private void txtPrecioVentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioVentaKeyTyped
        char c = evt.getKeyChar();
        if (((c < '0') || (c > '9')) && (c != KeyEvent.VK_BACK_SPACE) && (c != '.')) {
            evt.consume();
        }
        if (c == '.' && txtPrecioVenta.getText().contains(".")) {
            evt.consume();
            int i = txtPrecioVenta.getText().indexOf(".");
            txtPrecioVenta.setCaretPosition(i + 1);
        }
        if (txtPrecioVenta.getText().length() >= 9) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPrecioVentaKeyTyped

    private void menuModificarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuModificarMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_menuModificarMouseEntered

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        //CargaTabla(unaEmpresa.getArticulos());
    }//GEN-LAST:event_formWindowActivated

    private void tblArticulos1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblArticulos1MouseClicked
        if (evt.getButton() == MouseEvent.BUTTON3) {
            jPopupMenu1.setVisible(true);
        }
    }//GEN-LAST:event_tblArticulos1MouseClicked

    private void menuModificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuModificarMouseClicked
        
    }//GEN-LAST:event_menuModificarMouseClicked

    private void menuModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuModificarActionPerformed
        txtCodBarra.setEnabled(false);
        int i = tblArticulos1.getSelectedRow();
        if (i == -1) {
            JOptionPane.showMessageDialog(null, "seleccione una fila");
        } else {
            Articulo aux;
            String nroCodBarra = tblArticulos1.getValueAt(i, 0).toString();
            aux = unaEmpresa.getArticulos().get(nroCodBarra);
            txtCodBarra.setText(nroCodBarra);
            txtColor1.setText(aux.getColor());
            txtColor2.setText(aux.getColor2());
            txtNombre.setText(aux.getNombre());
            txtStock.setText(String.valueOf(aux.getStock()));
            txtTalle.setText(String.valueOf(aux.getTalle()));
            txtPrecioVenta.setText(String.valueOf(aux.getPrecioVenta()));
            cmbCategoria1.setSelectedItem(aux.getUnaCategoria());
            cmbMarca.setSelectedItem(aux.getUnaMarca());
        }
    }//GEN-LAST:event_menuModificarActionPerformed

    private void menuEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEliminarActionPerformed
        int i = tblArticulos1.getSelectedRow();
        if (i == -1) {
            JOptionPane.showMessageDialog(null, "seleccione una fila");
        } else {
            int dialogresult = JOptionPane.showConfirmDialog(null, "desea elimina el articulo");
            if (dialogresult == JOptionPane.YES_OPTION) {
                try {
                    unaEmpresa.eliminarArticulo(String.valueOf(tblArticulos1.getValueAt(i, 0)));
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            }
        }
    }//GEN-LAST:event_menuEliminarActionPerformed

    private void cmbCategoria1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCategoria1ActionPerformed
        actualizarCategoria2();
    }//GEN-LAST:event_cmbCategoria1ActionPerformed

    private void cmbCategoria2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCategoria2ActionPerformed
        //actualizarCategoria3();
    }//GEN-LAST:event_cmbCategoria2ActionPerformed

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
        if (txtNombre.getText().length() >= 30) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNombreKeyTyped

    private void txtColor1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtColor1KeyTyped
        
        if (txtColor1.getText().length() >= 20) {
            evt.consume();
        }
    }//GEN-LAST:event_txtColor1KeyTyped

    private void txtColor2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtColor2KeyTyped
        if (txtColor2.getText().length() >= 20) {
            evt.consume();
        }
    }//GEN-LAST:event_txtColor2KeyTyped

    private void lstNombreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstNombreMouseClicked
        if (evt.getClickCount() == 2) {
            txtNombre.setText(lstNombre.getSelectedValue().toString());
        }
    }//GEN-LAST:event_lstNombreMouseClicked

    private void cmbMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMarcaActionPerformed
        actualizarLista();
    }//GEN-LAST:event_cmbMarcaActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiArticulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiArticulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiArticulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiArticulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //  new GuiArticulos(unaEmpresa).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarCategoria;
    private javax.swing.JButton btnAgregarMarca;
    private javax.swing.JButton btnCancelarArt;
    private javax.swing.JButton btnGuardarCerArt;
    private javax.swing.JButton btnGuardarConArt;
    private javax.swing.JButton btnGuardarNueArt;
    private javax.swing.JComboBox cmbCategoria1;
    private javax.swing.JComboBox cmbCategoria2;
    private javax.swing.JComboBox cmbCriterioArticulo;
    private javax.swing.JComboBox cmbMarca;
    private javax.swing.JComboBox cmbSexo;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBusqueda;
    private javax.swing.JLabel lblCategoria1;
    private javax.swing.JLabel lblCategoria2;
    private javax.swing.JLabel lblCategoria3;
    private javax.swing.JLabel lblCodigoBarra;
    private javax.swing.JLabel lblColor;
    private javax.swing.JLabel lblColor2;
    private javax.swing.JLabel lblCriterioBusqueda;
    private javax.swing.JLabel lblFecha1;
    private javax.swing.JLabel lblMarca;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblPrecioVenta1;
    private javax.swing.JLabel lblStock;
    private javax.swing.JLabel lblTalle;
    private javax.swing.JLabel lblUsuarioActual1;
    private javax.swing.JList lstNombre;
    private javax.swing.JMenuItem menuEliminar;
    private javax.swing.JMenuItem menuModificar;
    private javax.swing.JTable tblArticulos1;
    private javax.swing.JTextField txtBusqueda;
    private javax.swing.JTextField txtCodBarra;
    private javax.swing.JTextField txtColor1;
    private javax.swing.JTextField txtColor2;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecioVenta;
    private javax.swing.JTextField txtStock;
    private javax.swing.JTextField txtTalle;
    // End of variables declaration//GEN-END:variables

    public void Guardar() {
        Boolean hayError = false;
        Boolean ckb = false;
        try {
            if ((!txtNombre.getText().equals("")) && (!txtCodBarra.getText().equals("")) && (!txtStock.getText().equals("")) && (!cmbMarca.getSelectedItem().equals("")) &&
                (!txtPrecioVenta.getText().equals("")) && (!cmbCategoria2.getSelectedItem().equals("")) && (!txtTalle.getText().equals(""))) {
                try {
                    Marca unaMarca;
                    unaMarca = (Marca) cmbMarca.getSelectedItem();
                    cmbMarca.setSelectedItem(unaMarca);
                    lblNombre.setForeground(Color.black);
                    lblCodigoBarra.setForeground(Color.black);
                    lblTalle.setForeground(Color.black);
                    lblColor.setForeground(Color.black);
                    lblColor2.setForeground(Color.black);
                    lblCategoria1.setForeground(Color.black);
                    lblCategoria2.setForeground(Color.black);
                    lblMarca.setForeground(Color.black);
                    lblPrecioVenta1.setForeground(Color.black);
                    lblStock.setForeground(Color.black);
                    if (txtCodBarra.isEnabled()) {
                        unaEmpresa.agregarArticulo(txtCodBarra.getText(), txtNombre.getText(), Integer.parseInt(txtStock.getText()),
                                                   Double.parseDouble(txtPrecioVenta.getText()), txtColor2.getText(), txtColor1.getText(),
                                                   Integer.parseInt(txtTalle.getText()), ckb, unaMarca, (Categoria) cmbCategoria2.getSelectedItem(),
                                                   cmbSexo.getSelectedItem().toString());
                        //CargaTabla(unaEmpresa.getArticulos());
                        JOptionPane.showMessageDialog(null, "El articulo se cargo con exito");

                    } else {
                        unaEmpresa.modificarArticulo(txtCodBarra.getText(), txtNombre.getText(), Integer.parseInt(txtStock.getText()),
                                                     Double.parseDouble(txtPrecioVenta.getText()), txtColor2.getText(), txtColor1.getText(),
                                                     Integer.parseInt(txtTalle.getText()), ckb, unaMarca, (Categoria) cmbCategoria2.getSelectedItem(),
                                                     cmbSexo.getSelectedItem().toString());
                        // CargaTabla(unaEmpresa.getArticulos());
                        JOptionPane.showMessageDialog(null, "El articulo se modifico con exito");
                    }
                    actualizarLista();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            } else {
                if (txtCodBarra.getText().equals("")) {
                    lblCodigoBarra.setForeground(Color.red);
                    hayError = true;
                } else {
                    lblCodigoBarra.setForeground(Color.black);
                }
                if (txtColor1.getText().equals("")) {
                    lblColor.setForeground(Color.red);
                    hayError = true;
                } else {
                    lblColor.setForeground(Color.black);
                }
                if (txtColor2.getText().equals("")) {
                    lblColor2.setForeground(Color.red);
                    hayError = true;
                } else {
                    lblColor2.setForeground(Color.black);
                }
                if (txtNombre.getText().equals("")) {
                    lblNombre.setForeground(Color.red);
                    hayError = true;
                } else {
                    lblNombre.setForeground(Color.black);
                }
                if (txtPrecioVenta.getText().equals("")) {
                    lblPrecioVenta1.setForeground(Color.red);
                    hayError = true;
                } else {
                    lblPrecioVenta1.setForeground(Color.black);
                }
                if (txtStock.getText().equals("")) {
                    lblStock.setForeground(Color.red);
                    hayError = true;
                } else {
                    lblStock.setForeground(Color.black);
                }
                if (txtTalle.getText().equals("")) {
                    lblTalle.setForeground(Color.red);
                    hayError = true;
                } else {
                    lblTalle.setForeground(Color.black);
                }
                if (cmbCategoria1.getSelectedItem().equals("")) {
                    lblCategoria1.setForeground(Color.red);
                    hayError = true;
                } else {
                    lblCategoria1.setForeground(Color.black);
                }
                if (cmbCategoria2.getSelectedItem().equals("")) {
                    lblCategoria2.setForeground(Color.red);
                    hayError = true;
                } else {
                    lblCategoria2.setForeground(Color.black);
                }
                if (cmbMarca.getSelectedItem().equals("")) {
                    lblMarca.setForeground(Color.red);
                    hayError = true;
                } else {
                    lblMarca.setForeground(Color.black);
                }
                if (hayError) {
                    JOptionPane.showMessageDialog(null, "Falta algun dato");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

    public void CargaTabla(Map articulos) {
        DefaultTableModel modelo = (DefaultTableModel) tblArticulos1.getModel();
        int filas = tblArticulos1.getRowCount();
        for (int i = 0; filas > i; i++)
            modelo.removeRow(0);
        Collection lista;
        lista = articulos.values();
        if (!lista.isEmpty()) {
            for (Object unObj : lista) {
                Articulo unArt = (Articulo) unObj;
                modelo.addRow(new Object[] { (unArt.getCodBarra()), (unArt.getNombre()), (unArt.getUnaMarca().getNombreMarca()), unArt.getStock(), unArt.getPrecioVenta()});
            }
        }
    }


    public void limpiar() {
        txtCodBarra.setText("");
        txtColor1.setText("");
        txtColor2.setText("");
        txtNombre.setText("");
        txtPrecioVenta.setText("");
        txtStock.setText("");
        txtTalle.setText("");
        cmbCategoria2.setSelectedItem("");
        cmbCategoria1.setSelectedItem("");
        cmbMarca.setSelectedItem("");

    }

    public void actualizarComboMarca() {
        cmbMarca.setModel(new javax.swing.DefaultComboBoxModel(unaEmpresa.getMarcas().values().toArray()));
    }

    public void actualizarComboCategoria1() {
        Map cargar = new HashMap();
        for (Categoria unaCa : unaEmpresa.getCategorias().values()) {
            if (unaCa.getEsPadre()) {
                cargar.put(unaCa.getNroCateg(), unaCa);
            }
        }
        cmbCategoria1.setModel(new javax.swing.DefaultComboBoxModel(cargar.values().toArray()));
    }

    public void actualizarCategoria2() {
        int codCat = ((Categoria) cmbCategoria1.getSelectedItem()).getNroCateg();
        Map hijos = new HashMap();
        for (Categoria unaCa : unaEmpresa.getCategorias().values()) {
            if (unaCa.getCodPadre() == codCat) {
                hijos.put(unaCa.getNroCateg(), unaCa);
            }
        }
        cmbCategoria2.setModel(new javax.swing.DefaultComboBoxModel(hijos.values().toArray()));
    }
    
    public void actualizarLista() {
        Articulo aux;
        DefaultListModel modelo = new DefaultListModel();
        for (Object unArticulo : unaEmpresa.getArticulos().values().toArray()) {
            aux = (Articulo) unArticulo;
            Boolean entr = false;
            if (aux.getUnaMarca().getNombreMarca().equals(cmbMarca.getSelectedItem().toString())) {
                for (Object unNombre : modelo.toArray()) {
                    if (unNombre.equals(aux.getNombre()))
                        entr = true;
                }
                if (!entr)
                    modelo.addElement(aux.getNombre().toString());
            }
        }
        lstNombre.setModel(modelo);
    }

    @Override
    public void update(Observable observable, Object object) {
        actualizarComboMarca();
        actualizarComboCategoria1();
        actualizarCategoria2();
        CargaTabla(unaEmpresa.getArticulos());
        actualizarLista();
    }

    private void reloj() {
        javax.swing.Timer timer = new javax.swing.Timer(1000, new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent ae) {
                lblFecha1.setText(Calendar.getInstance().getTime().toLocaleString());
            }
        });
        timer.start();
    }

    public Map consultaArticulos(String consulta) {
        int i = cmbCriterioArticulo.getSelectedIndex();
        Map retorno = new HashMap();
        Articulo aux = null;
        if (consulta.equals(""))
            return unaEmpresa.getArticulos();
        for (Object unArt : unaEmpresa.getArticulos().values().toArray()) {
            aux = (Articulo) unArt;
            Categoria unCa = unaEmpresa.getCategorias().get(aux.getUnaCategoria().getCodPadre());
            if ((i == 0) &&
                (unCa.getNombre().toUpperCase().contains(consulta) || aux.getCodBarra().toUpperCase().contains(consulta) ||
                 aux.getUnaCategoria().toString().toUpperCase().contains(consulta) || aux.getColor().toUpperCase().contains(consulta) ||
                 aux.getColor2().toUpperCase().contains(consulta) || aux.getNombre().toUpperCase().contains(consulta) ||
                 aux.getUnaMarca().toString().toUpperCase().contains(consulta))) {
                retorno.put(aux.getCodBarra(), aux);
            } else if ((i == 1) && (aux.getCodBarra().toUpperCase().contains(consulta))) {
                retorno.put(aux.getCodBarra(), aux);
            } else if ((i == 2) && (aux.getNombre().toUpperCase().contains(consulta))) {
                retorno.put(aux.getNombre(), aux);
            } else if ((i == 3) && (aux.getUnaMarca().toString().toUpperCase().contains(consulta))) {
                retorno.put(aux.getUnaMarca().toString(), aux);
            } else if ((i == 4) && (aux.getColor().toUpperCase().contains(consulta) || aux.getColor2().toUpperCase().contains(consulta))) {
                retorno.put(aux.getColor().toString(), aux);
            } else if ((i == 5) && (aux.getUnaCategoria().toString().toUpperCase().contains(consulta) || unCa.getNombre().toUpperCase().contains(consulta))) {
                retorno.put(aux.getUnaCategoria().toString(), aux);
            }
        }
        return retorno;
    }
}
