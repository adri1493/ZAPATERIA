
package Interfaz;

import java.awt.Toolkit;
import java.awt.event.InputEvent;

import java.util.Calendar;
import java.util.Collection;
import java.util.Map;
import java.util.Observable;
import java.util.Observer;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.DefaultTreeModel;

import project1.Categoria;
import project1.Empresa;
import project1.TipoPago;

/**
 *
 * @author polaco
 */
public class GuiCategoria extends javax.swing.JFrame implements Observer {
    Empresa unaEmpresa;
    Boolean modificar = false;

    /** Creates new form Categoria */
    public GuiCategoria(Empresa unaEmpresa) {
        this.unaEmpresa = unaEmpresa;
        initComponents();
        //actualizarCategoria2(unaEmpresa.getCategorias());
        treeicono(unaEmpresa.getCategorias());
        unaEmpresa.addObserver(this);
        reloj();
        lblUsuarioActual1.setText(GuiIngresar.getUsuario());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        jPopupMenu1 = new javax.swing.JPopupMenu();
        MenuAgregar = new javax.swing.JMenuItem();
        MenuModificar = new javax.swing.JMenuItem();
        jPanel3 = new javax.swing.JPanel();
        btnCancelarCategoria = new javax.swing.JButton();
        btnGuardarCerCategoria = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        treeCategoria = new javax.swing.JTree();
        jPanel1 = new javax.swing.JPanel();
        lblNombreMarca = new javax.swing.JLabel();
        txtNombreMarcas = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        lblUsuarioActual1 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();

        MenuAgregar.setText("Agregar");
        MenuAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuAgregarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(MenuAgregar);

        MenuModificar.setText("Modificar");
        MenuModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuModificarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(MenuModificar);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Categoria");
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/iconos/iconoprograma.png")));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        btnCancelarCategoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/1404956598_Delete.png"))); // NOI18N
        btnCancelarCategoria.setText("Cancelar");
        btnCancelarCategoria.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnCancelarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarCategoriaActionPerformed(evt);
            }
        });

        btnGuardarCerCategoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/1404955973_Save.png"))); // NOI18N
        btnGuardarCerCategoria.setText("Guardar");
        btnGuardarCerCategoria.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnGuardarCerCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarCerCategoriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnGuardarCerCategoria)
                .addGap(70, 70, 70)
                .addComponent(btnCancelarCategoria)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelarCategoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGuardarCerCategoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        treeCategoria.setComponentPopupMenu(jPopupMenu1);
        treeCategoria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                treeCategoriaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(treeCategoria);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Agregar Categoria"));

        lblNombreMarca.setText("Nombre");

        txtNombreMarcas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreMarcasKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNombreMarca)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addComponent(txtNombreMarcas, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombreMarcas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNombreMarca))
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel13.setText("Usuario: ");

        lblUsuarioActual1.setText("label");

        jLabel14.setText("fecha:");

        lblFecha.setText("Usuario: ");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblUsuarioActual1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblFecha)
                .addGap(82, 82, 82))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel14)
                .addComponent(lblFecha)
                .addComponent(jLabel13)
                .addComponent(lblUsuarioActual1))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) { //GEN-FIRST:event_formWindowActivated
        //treeicono();aaaAAAaaa
        //actualizarCategoria2(unaEmpresa.getCategorias());
        //treeicono(unaEmpresa.getCategorias());

    } //GEN-LAST:event_formWindowActivated

    private void btnGuardarCerCategoriaActionPerformed(java.awt.event.ActionEvent evt) { //GEN-FIRST:event_btnGuardarCerCategoriaActionPerformed
        if (aprobado()) {
            try {
                if (!treeCategoria.isEnabled()) {
                    DefaultMutableTreeNode nodo;
                    nodo = (DefaultMutableTreeNode) treeCategoria.getLastSelectedPathComponent();
                    String nodos = nodo.toString();
                    if (nodo.getLevel() < 2) {
                        Collection lista = unaEmpresa.getCategorias().values();
                        for (Object unObj : lista) {
                            Categoria unaCat = (Categoria) unObj;
                            if (unaCat.getNombre().equals(nodos) || nodos.equals("Categorias")) {
                                if (modificar) {
                                    unaEmpresa.modificarCategoria(unaCat.getNroCateg(), txtNombreMarcas.getText(), unaCat.getCodPadre());
                                    JOptionPane.showMessageDialog(null, "La categoria se modifico con exito");
                                    break;
                                } else {
                                    if (nodo.getLevel() == 0)
                                        unaEmpresa.agregarCategoria(txtNombreMarcas.getText(), -1, true);
                                    else
                                        unaEmpresa.agregarCategoria(txtNombreMarcas.getText(), unaCat.getNroCateg(), false);
                                    JOptionPane.showMessageDialog(null, "La categoria se cargo con exito");
                                    break;
                                }
                            }
                        }

                    } else {
                        JOptionPane.showMessageDialog(null, "no se puede agreagr otro nivel de categoria");
                    }

                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }else{
            JOptionPane.showMessageDialog(null, "no ingreso nombre o el nombre ya existe");
        }
        treeCategoria.setEnabled(true);
        txtNombreMarcas.setText("");
        modificar = false;

    } //GEN-LAST:event_btnGuardarCerCategoriaActionPerformed

    private void treeCategoriaMouseClicked(java.awt.event.MouseEvent evt) { //GEN-FIRST:event_treeCategoriaMouseClicked
        if ((evt.getModifiers() & InputEvent.BUTTON3_MASK) == InputEvent.BUTTON3_MASK) {
            jPopupMenu1.setVisible(true);
        }
    } //GEN-LAST:event_treeCategoriaMouseClicked

    private void MenuModificarActionPerformed(java.awt.event.ActionEvent evt) { //GEN-FIRST:event_MenuModificarActionPerformed
        treeCategoria.setEnabled(false);
        modificar = true;
    } //GEN-LAST:event_MenuModificarActionPerformed

    private void btnCancelarCategoriaActionPerformed(java.awt.event.ActionEvent evt) { //GEN-FIRST:event_btnCancelarCategoriaActionPerformed
        treeCategoria.setEnabled(true);
        txtNombreMarcas.setText("");
        modificar = false;
    } //GEN-LAST:event_btnCancelarCategoriaActionPerformed

    private void MenuAgregarActionPerformed(java.awt.event.ActionEvent evt) { //GEN-FIRST:event_MenuAgregarActionPerformed
        treeCategoria.setEnabled(false);
    } //GEN-LAST:event_MenuAgregarActionPerformed

    private void txtNombreMarcasKeyTyped(java.awt.event.KeyEvent evt) { //GEN-FIRST:event_txtNombreMarcasKeyTyped
        if (txtNombreMarcas.getText().length() >= 30) {
            evt.consume();
        }
    } //GEN-LAST:event_txtNombreMarcasKeyTyped

    /**
     * @param args the command line arguments
     */
    /* public static void main(String args[]) {
        /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
    /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
    /*java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuiCategoria().setVisible(true);
            }
        });

    }
*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem MenuAgregar;
    private javax.swing.JMenuItem MenuModificar;
    private javax.swing.JButton btnCancelarCategoria;
    private javax.swing.JButton btnGuardarCerCategoria;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblNombreMarca;
    private javax.swing.JLabel lblUsuarioActual1;
    private javax.swing.JTree treeCategoria;
    private javax.swing.JTextField txtNombreMarcas;
    // End of variables declaration//GEN-END:variables
    public void treeicono(Map categorias) {
        Collection lista;
        lista = categorias.values();
        DefaultMutableTreeNode abuelito = new DefaultMutableTreeNode("Categorias");
        DefaultTreeModel abuelo = new DefaultTreeModel(abuelito);
        int i = 0;
        int j = 0;
        int h = 0;
        if (!lista.isEmpty()) {
            for (Object unObj : lista) {
                Categoria unaCat = (Categoria) unObj;
                DefaultMutableTreeNode padre = new DefaultMutableTreeNode(unaCat.getNombre());
                if (unaCat.getEsPadre() == true) {
                    abuelo.insertNodeInto(padre, abuelito, i);
                    i++;
                    j = 0;
                    for (Object unObjH : lista) {
                        Categoria unaCatH = (Categoria) unObjH;
                        if (unaCatH.getCodPadre() == unaCat.getNroCateg()) {
                            DefaultMutableTreeNode hijo = new DefaultMutableTreeNode(unaCatH.getNombre());
                            abuelo.insertNodeInto(hijo, padre, j);
                            j++;
                            h = 0;
                            for (Object unObjH2 : lista) {
                                Categoria unaCatH2 = (Categoria) unObjH2;
                                if (unaCatH2.getCodPadre() == unaCatH.getNroCateg()) {
                                    DefaultMutableTreeNode hijo2 = new DefaultMutableTreeNode(unaCatH2.getNombre());
                                    abuelo.insertNodeInto(hijo2, hijo, h);
                                    h++;
                                }
                            }
                        }
                    }
                }
            }
            //DefaultTreeCellRenderer render = (DefaultTreeCellRenderer) treeCategoria.getCellRenderer();
            //render.setLeafIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Categ2.png")));
            //render.setOpenIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Categ2.png")));
            //render.setClosedIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/Categ1.png")));
        }
        treeCategoria.setModel(abuelo);
    }

    /*public void actualizarCategoria2(Map categorias) {
        Collection lista;
        lista = categorias.values();
        int j = -1;
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();

        if (!lista.isEmpty()) {
            for (Object unObj : lista) {
                Categoria unaCat = (Categoria) unObj;
                if (unaCat.getEsPadre() == true) {
                    modelo.addElement(unaCat);
                    for (Object unObjH : lista) {
                        Categoria unaCatH = (Categoria) unObjH;
                        if (unaCatH.getCodPadre() == unaCat.getNroCateg())
                            modelo.addElement(unaCatH);
                    }
                }
            }
        }
    }*/

    @Override
    public void update(Observable observable, Object object) {
        //actualizarCategoria2(unaEmpresa.getCategorias());
        treeicono(unaEmpresa.getCategorias());


    }

    private Boolean aprobado() {
        Boolean existe = true;
        if (!(txtNombreMarcas.getText().equals(""))) {
            for (TipoPago tipo : unaEmpresa.getTiposPagos().values()) {
                if (tipo.getNombre().equals(txtNombreMarcas.getText()))
                    existe = false;
            }
        } else
            existe = false;
        return existe;
    }

    private void reloj() {
        javax.swing.Timer timer = new javax.swing.Timer(1000, new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent ae) {
                lblFecha.setText(Calendar.getInstance().getTime().toLocaleString());
            }
        });
        timer.start();
    }
}
